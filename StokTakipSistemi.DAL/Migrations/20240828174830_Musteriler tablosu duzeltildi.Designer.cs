// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StokTakipSistemi.DAL.Context;

#nullable disable

namespace StokTakipSistemi.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240828174830_Musteriler tablosu duzeltildi")]
    partial class Musterilertablosuduzeltildi
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StokTakipSistemi.ENTITIES.Entity.Kategori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("KategoriAciklamasi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KategoriAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kategoriler");
                });

            modelBuilder.Entity("StokTakipSistemi.ENTITIES.Entity.Musteri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MailAdresi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MusteriAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonNumarasi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Musteriler");
                });

            modelBuilder.Entity("StokTakipSistemi.ENTITIES.Entity.Siparis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MusteriId")
                        .HasColumnType("int");

                    b.Property<string>("SiparisDurumu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SiparisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("TedarikciId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MusteriId");

                    b.HasIndex("TedarikciId");

                    b.ToTable("Siparisler");
                });

            modelBuilder.Entity("StokTakipSistemi.ENTITIES.Entity.SiparisDetay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("SiparisId")
                        .HasColumnType("int");

                    b.Property<int>("SiparisMiktari")
                        .HasColumnType("int");

                    b.Property<decimal>("UrunBirimFiyati")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SiparisId");

                    b.HasIndex("UrunId");

                    b.ToTable("SiparisDetaylari");
                });

            modelBuilder.Entity("StokTakipSistemi.ENTITIES.Entity.StokHareket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("HareketTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("HareketTuru")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Miktar")
                        .HasColumnType("int");

                    b.Property<int>("SiparisId")
                        .HasColumnType("int");

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SiparisId");

                    b.HasIndex("UrunId");

                    b.ToTable("StokHareketleri");
                });

            modelBuilder.Entity("StokTakipSistemi.ENTITIES.Entity.Tedarikci", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MailAdresi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TedarikciAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonNumarasi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tedarikciler");
                });

            modelBuilder.Entity("StokTakipSistemi.ENTITIES.Entity.Urun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BirimFiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("KategoriId")
                        .HasColumnType("int");

                    b.Property<int>("MevcutStokMiktari")
                        .HasColumnType("int");

                    b.Property<string>("StokTutmaBirimiKodu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrunAciklamasi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrunAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YenidenSiparisSeviyesi")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KategoriId");

                    b.ToTable("Urunler");
                });

            modelBuilder.Entity("StokTakipSistemi.ENTITIES.Entity.Siparis", b =>
                {
                    b.HasOne("StokTakipSistemi.ENTITIES.Entity.Musteri", "Musteri")
                        .WithMany("Siparisler")
                        .HasForeignKey("MusteriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StokTakipSistemi.ENTITIES.Entity.Tedarikci", "Tedarikci")
                        .WithMany("Siparisler")
                        .HasForeignKey("TedarikciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Musteri");

                    b.Navigation("Tedarikci");
                });

            modelBuilder.Entity("StokTakipSistemi.ENTITIES.Entity.SiparisDetay", b =>
                {
                    b.HasOne("StokTakipSistemi.ENTITIES.Entity.Siparis", "Siparis")
                        .WithMany("SiparisDetaylari")
                        .HasForeignKey("SiparisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StokTakipSistemi.ENTITIES.Entity.Urun", "Urun")
                        .WithMany("SiparisDetaylari")
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Siparis");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("StokTakipSistemi.ENTITIES.Entity.StokHareket", b =>
                {
                    b.HasOne("StokTakipSistemi.ENTITIES.Entity.Siparis", "Siparis")
                        .WithMany("StokHareketleri")
                        .HasForeignKey("SiparisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StokTakipSistemi.ENTITIES.Entity.Urun", "Urun")
                        .WithMany("StokHareketleri")
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Siparis");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("StokTakipSistemi.ENTITIES.Entity.Urun", b =>
                {
                    b.HasOne("StokTakipSistemi.ENTITIES.Entity.Kategori", "Kategori")
                        .WithMany("Urunler")
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategori");
                });

            modelBuilder.Entity("StokTakipSistemi.ENTITIES.Entity.Kategori", b =>
                {
                    b.Navigation("Urunler");
                });

            modelBuilder.Entity("StokTakipSistemi.ENTITIES.Entity.Musteri", b =>
                {
                    b.Navigation("Siparisler");
                });

            modelBuilder.Entity("StokTakipSistemi.ENTITIES.Entity.Siparis", b =>
                {
                    b.Navigation("SiparisDetaylari");

                    b.Navigation("StokHareketleri");
                });

            modelBuilder.Entity("StokTakipSistemi.ENTITIES.Entity.Tedarikci", b =>
                {
                    b.Navigation("Siparisler");
                });

            modelBuilder.Entity("StokTakipSistemi.ENTITIES.Entity.Urun", b =>
                {
                    b.Navigation("SiparisDetaylari");

                    b.Navigation("StokHareketleri");
                });
#pragma warning restore 612, 618
        }
    }
}
